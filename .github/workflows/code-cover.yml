# This workflow is purely to determine code coverage.
# Since there were issues with the pinned version of older versions of ISIS
# and we really only need to run coverage once (not N times for every combination
# in a test matrix), there is some duplication with the primary testing workflow.

name: Code Coverage

on: [push, pull_request]

env:
  isis-data: $GITHUB_WORKSPACE/test-resources/ISISDATA/

jobs:
  coverage:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Conda setup
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.6
        activate-environment: isis
        channels: usgs-astrogeology, conda-forge
    - name: Install ISIS
      run: |
        conda install -q -y -c usgs-astrogeology isis=4.3.0
    - name: Setup test-resources/
      run: |
        mkdir test-resources/
        mkdir ${{ env.isis-data }}
    - name: Download IMG
      run: curl "https://hirise-pds.lpl.arizona.edu/PDS/EDR/PSP/ORB_010500_010599/PSP_010502_2090/PSP_010502_2090_RED5_0.IMG" -o test-resources/PSP_010502_2090_RED5_0.img
    - name: Download mini-ISISDATA
      run: |
        rsync -rltzvR --delete isisdist.astrogeology.usgs.gov::isis3data/data/./base/translations/pdsImage.trn ${{ env.isis-data }}
        rsync -rltzvR --delete isisdist.astrogeology.usgs.gov::isis3data/data/./base/templates/labels/CubeFormatTemplate.pft ${{ env.isis-data }}
        rsync -rltzvR --delete isisdist.astrogeology.usgs.gov::isis3data/data/./mro/translations/hiriseInstrument.trn ${{ env.isis-data }}
        rsync -rltzvR --delete isisdist.astrogeology.usgs.gov::isis3data/data/./mro/translations/hiriseBandBin.trn ${{ env.isis-data }}
        rsync -rltzvR --delete isisdist.astrogeology.usgs.gov::isis3data/data/./mro/translations/hiriseArchive.trn ${{ env.isis-data }}
    - name: ISIS varinit
      run: |
        python $CONDA_PREFIX/scripts/isisVarInit.py --data-dir="${{ env.isis-data }}"
    - name: Exit isis env
      run: conda deactivate
    - name: Set up kalasiris testing env
      run: conda create -n kal python=3.7 -y
    - name: Enter kalasiris testing env
      run: |
        conda activate kal
        export ISISROOT="/usr/share/miniconda/envs/isis/"
        export ISISDATA="${{ env.isis-data }}"
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Test Install
      run: python -m pip install -e .
    - name: Test with pytest and generate coverage report
      run: |
        conda install pytest
        conda install pytest-cov
        pytest --cov=./kalasiris --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
